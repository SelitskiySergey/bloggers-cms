@using Pds.Web.Common.Models.Topic
<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item @(PaginationSettings.CurrentPage == 0 ? "disabled" : string.Empty)">
            <a class="page-link" @onclick="() => ChangePage(0)">
                First
            </a>
        </li>
        <li class="page-item @(PaginationSettings.CurrentPage == 0 ? "disabled" : string.Empty)">
            <a class="page-link" @onclick="() => ChangePage(PaginationSettings.CurrentPage - 1)">
                Previous
            </a>
        </li>
        @for (var index = 0; index < PaginationSettings.PageCount; index++)
        {
            var currentPage = index;
            @if (index == PaginationSettings.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" @onclick="() => ChangePage(currentPage)">@(index + 1)</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" @onclick="() => ChangePage(currentPage)">@(index + 1)</a>
                </li>
            }
        }
        <li class="page-item @(PaginationSettings.CurrentPage == PaginationSettings.PageCount - 1 ? "disabled" : string.Empty)">
            <a class="page-link" @onclick="() => ChangePage(PaginationSettings.CurrentPage + 1)">
                Next
            </a>
        </li>
        <li class="page-item @(PaginationSettings.CurrentPage == PaginationSettings.PageCount - 1 ? "disabled" : string.Empty)">
            <a class="page-link" @onclick="() => ChangePage(PaginationSettings.PageCount - 1)">
                Last
            </a>
        </li>
    </ul>
    <ul class="list-group list-group-horizontal">
        @for (var pageSize = 5; pageSize <= 100; pageSize *= 2)
        {
            var currentPageSize = pageSize;
            <li class="list-group-item  @(PaginationSettings.PageSize == pageSize ? "active" : string.Empty)">
                <a @onclick="() => ChangePageSize(currentPageSize)" title="По @pageSize элементов на странице одной странице">
                    @pageSize
                </a>
            </li>
        }
    </ul>
</nav>

@code {

    [Parameter]
    public PaginationSettings PaginationSettings { get; set; }

    [Parameter]
    public EventCallback<PaginationSettings> PaginationSettingsChanged { get; set; }

    private async Task ChangePage(int index)
    {
        if (PaginationSettings.CurrentPage == index)
            return;

        PaginationSettings.CurrentPage = index;
        await PaginationSettingsChanged.InvokeAsync(PaginationSettings);
    }

    private async Task ChangePageSize(int pageSize)
    {
        if (PaginationSettings.PageSize == pageSize)
            return;

        PaginationSettings.PageSize = pageSize;
        await PaginationSettingsChanged.InvokeAsync(PaginationSettings);
    }

}