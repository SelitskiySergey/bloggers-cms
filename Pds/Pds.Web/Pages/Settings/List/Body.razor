@page "/settings"
@inherits BasePageComponent
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Pds.Web.Common
@using Pds.Api.Contracts.Client
@using Pds.Api.Contracts.Settings
@using static Pds.Web.Common.TitleExtension

@inject IApiClient ApiClient
@inject IAccessTokenProvider TokenProvider

<Title>@WithSuffix("Настройки")</Title>

<h4 class="card-header d-flex justify-content-between align-items-center">
    Список настроек
    <a href="/brands" class="btn btn-success">Бренды</a>
</h4>
@if (settings == null)
{
    <p>
        <em>Загрузка...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Описание</th>
            <th class="client-name-header">Ключ</th>
            <th>Значение</th>
            <th class="text-center actions-header">Действия</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var setting in settings.OrderBy(s => s.Key))
            {
                <tr>
                    <td class="comment-row">
                        @setting.Description
                    </td>
                    <td class="client-name-row">
                        @setting.Key
                    </td>
                    <td class="comment-row">
                        @setting.Value
                    </td>
                    <td class="text-center">
                        <Actions CurrentSetting="@setting"></Actions>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private GetSettingsResponse settings;

    protected override async Task OnInitializedAsync()
    {
        settings = await GetSettingsInfo();
    }

    private async Task SettingsUpdate()
    {
        settings = await GetSettingsInfo();
    }

    private async Task<GetSettingsResponse> GetSettingsInfo()
    {
        return await ApiClient.Get<GetSettingsResponse>(TokenProvider, "settings");
    }
}