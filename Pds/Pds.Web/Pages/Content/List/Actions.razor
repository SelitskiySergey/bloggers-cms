@using Pds.Web.Common
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Pds.Api.Contracts.Content
@using Pds.Core.Enums

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject IApiClient ApiClient
@inject IAccessTokenProvider TokenProvider

<div class="panel panel-default actions-panel">
    <button title="Редактировать" class="btn btn-primary btn-sm" @onclick="OnEdit">
        <i class="bi bi-pencil-fill"></i>
    </button>
    
    @if (CurrentContent.Status == ContentStatus.Active && (CurrentContent.BillStatus == BillStatus.Active || CurrentContent.BillCost == 0))
    {
        <button title="Удалить" class="btn btn-danger btn-sm" @onclick="OnDelete">
            <i class="bi bi-trash-fill"></i>
        </button>
    }

    @if (CurrentContent.Status == ContentStatus.Active && CurrentContent.BillStatus == BillStatus.Active)
    {
        <button title="Оплатить" class="btn btn btn-dark btn-sm" @onclick="OnPay">
            <i class="bi bi-credit-card-2-back"></i>
        </button>
    }
</div>

@code {
    [Parameter]
    public EventCallback OnContentUpdate { get; set; }
    [Parameter]
    public ContentDto CurrentContent { get; set; }

    private void OnEdit()
    {
        NavigationManager.NavigateTo($"/content/{CurrentContent.Id}");
    }

    private async Task OnDelete()
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Уверены, что хотите удалить {CurrentContent.Title}?");
        if (confirmed)
        {
            await ApiClient.Delete<object>(TokenProvider, $"content/{CurrentContent.Id}");
            await OnContentUpdate.InvokeAsync(); // Update UI
        }
    }

    private void OnPay()
    {
        NavigationManager.NavigateTo($"/content/{CurrentContent.Id}/pay");
    }
}