@using Pds.Core.Enums
@using Pds.Web.Common
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Pds.Api.Contracts.Brand

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject IApiClient ApiClient
@inject IAccessTokenProvider TokenProvider

<div class="panel panel-default actions-panel">
    <button title="Редактировать" class="btn btn-primary btn-sm" @onclick="OnEdit">
        <i class="bi bi-pencil-fill"></i>
    </button>

    @if ((CurrentBrand.Bills == null || CurrentBrand.Bills.Count == 0) &&
         (CurrentBrand.Contents == null || CurrentBrand.Contents.Count== 0) &&
         (CurrentBrand.Costs == null || CurrentBrand.Costs.Count== 0) &&
         (CurrentBrand.Gifts == null || CurrentBrand.Gifts.Count== 0) &&
         (CurrentBrand.Persons == null || CurrentBrand.Persons.Count== 0))
    {
        <button title="Удалить" class="btn btn-danger btn-sm" @onclick="OnDelete">
            <i class="bi bi-trash-fill"></i>
        </button>
    }
</div>

@code {
    [Parameter]
    public EventCallback OnBrandUpdate { get; set; }
    [Parameter]
    public BrandFullDto CurrentBrand { get; set; }

    private void OnEdit()
    {
        NavigationManager.NavigateTo($"/brands/{CurrentBrand.Id}/edit");
    }

    private async Task OnDelete()
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Уверены, что хотите удалить {CurrentBrand.Name}?");
        if (confirmed)
        {
            await ApiClient.Delete<object>(TokenProvider, $"brands/{CurrentBrand.Id}");
            await OnBrandUpdate.InvokeAsync(); // Update UI
        }
    }
}